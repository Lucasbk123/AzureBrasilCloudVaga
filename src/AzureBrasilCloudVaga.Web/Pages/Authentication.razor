@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Logging
@inject ILogger<Authentication> Logger

<RemoteAuthenticatorView Action="@Action" OnLogOutSucceeded="RedirectLogin">
    <LoggingIn>
        <div class="auth-status">
            <div class="spinner"></div>
            <p>Realizando login com Microsoft...</p>
        </div>
    </LoggingIn>
    <LogInFailed>
        <div class="auth-status error">
            <i class="fas fa-exclamation-triangle"></i>
            <h3>Erro no Login</h3>
            <p>Não foi possível realizar o login. Tente novamente.</p>
            <button class="btn btn-primary" @onclick="RetryLogin">
                Tentar Novamente
            </button>
        </div>
    </LogInFailed>
    <LogOut>
        <div class="auth-status">
            <div class="spinner"></div>
            <p>Realizando logout...</p>
        </div>
    </LogOut>
    <LogOutSucceeded>
        <RedirectToLogin></RedirectToLogin>
    </LogOutSucceeded>
    <LogOutFailed>
        <div class="auth-status error">
            <i class="fas fa-exclamation-triangle"></i>
            <h3>Erro no Logout</h3>
            <p>Não foi possível realizar o logout completamente.</p>
        </div>
    </LogOutFailed>
</RemoteAuthenticatorView>

<style>
    .auth-status {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-height: 60vh;
        text-align: center;
        padding: 2rem;
    }

        .auth-status.success {
            color: #28a745;
        }

        .auth-status.error {
            color: #dc3545;
        }

        .auth-status i {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .auth-status h3 {
            margin: 0.5rem 0;
            font-size: 1.5rem;
        }

        .auth-status p {
            margin: 0.5rem 0 1.5rem;
            font-size: 1.1rem;
        }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #0078d4;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 1rem;
    }


    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 0.375rem;
        text-decoration: none;
        font-weight: 500;
        cursor: pointer;
        border: none;
        font-size: 1rem;
    }

    .btn-primary {
        background-color: #0078d4;
        color: white;
    }

        .btn-primary:hover {
            background-color: #106ebe;
        }
</style>

@code {
    [Inject]
    protected NavigationManager Navigation { get; set; } = default!;
    [Parameter] public string? Action { get; set; }

    protected override void OnInitialized()
    {
        Logger.LogInformation($"Processando ação de autenticação: {Action}");
    }

    private void RedirectLogin() => Navigation.NavigateToLogin("login");

    private void RetryLogin()
    {
        Navigation.NavigateTo("/authentication/login", forceLoad: true);
    }


}